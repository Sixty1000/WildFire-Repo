/*create global threshold for maximum temperature
 *create global bool val for passed threshold
 *create volatile var for temperature
 *create function for light and RGB
 *create function that takes in input bool and returns void -- purpose is to cause output buzz on buzzer
 *configure ADC_init and set output pin to light (take code from RGB project
 *compare function for given val from temp sense and threshold --> returns bool val
*/

#include <stdlib.h>
#include <string.h>
#include <Screen_HX8353E.h>
#include <Terminal12e.h>
#include <Terminal6e.h>
#include <Terminal8e.h>
#include <gpio.h>

//made up threshold val *can change later*
int threshold = 110;
volatile uint8_t temp;
int input = 0;
int count = 0;

//thermal function that activates input above certain threshold 
int thermal(int temp){
  int ret;
  if(temp > threshold){
    ret = 1;
  } else{
    ret = 0;
  }

  return ret;
}

void RGB_output(uint8_t count) {
  if(count == 0){
    GPIO_setOutputLowOnPin(GPIO_PORT_P2, GPIO_PIN0 | GPIO_PIN1 | GPIO_PIN2);
  } else if(count == 1){
    GPIO_setOutputLowOnPin(GPIO_PORT_P2, GPIO_PIN1 | GPIO_PIN2);
    GPIO_setOutputHighOnPin(GPIO_PORT_P2, GPIO_PIN0);
  }

}

void setup() {
  
  GPIO_setAsInputPinWithPullUpResistor(GPIO_PORT_P1, GPIO_PIN1);
  GPIO_setAsOutputPin(GPIO_PORT_P2, GPIO_PIN0 | GPIO_PIN1 | GPIO_PIN2);
  GPIO_setOutputLowOnPin(GPIO_PORT_P2, GPIO_PIN0 | GPIO_PIN1 | GPIO_PIN2);
  
  // put your setup code here, to run once:

}

void loop() {
  //to work requires button to be pressed in to work
  if(GPIO_getInputPinValue(GPIO_PORT_P1, GPIO_PIN1) == 0){
    //change 120 to actual input value from thermal sensor
    input = thermal(120);
    RGB_output(input);
  } else{
    input = 0;
    RGB_output(input);
  }
  // put your main code here, to run repeatedly: 
  
}
